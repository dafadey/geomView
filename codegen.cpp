#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <array>

std::stringstream out;

std::string processFile(const char* f) {
  std::ifstream inf(f);
  std::string fs;
  const char* it = f;
  while(true)
  {
    if(*it != '.')
      fs += *it;
    else
      fs += '_';
    it++;
    if(*it==0)
      break;
  }
  out << "\nconst char* " << fs << "="; 
  std::string ln;
  while(getline(inf, ln))
    out << "\"" << ln << "\\n\"\n";
  out << ";";
  inf.close();
  return fs;
}

int main(int argc, char* argv[]) {
  out << "////this file is automatically generated by codegen.cpp to support shader loading from const char*\n";
  std::vector<std::array<std::string,2>> vars;
  for(int i=1; i<argc; i++)
    vars.push_back(std::array<std::string,2>{argv[i], processFile(argv[i])});

  out << "\nstatic std::map<std::string, const char*> shaderRAMfs;\n";
  out << "if(!shaderRAMfs.size()) {\n";
  for(auto& var : vars)
    out << "  shaderRAMfs[\"" << var[0] << "\"] = " << var[1] << ";\n";
  out << "}\n";
  
  std::cout << out.str()   << '\n';
  return 0;
}
